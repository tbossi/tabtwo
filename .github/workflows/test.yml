name: Test TabTwo

on:
  push:
    branches:
      - 'main'
      - 'feature/*'
  
  workflow_dispatch:

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node_version: [20] # [16, 18, 19, 20, 21]
        shell: [bash, zsh, fish, ksh, powershell]
        exclude:
          - os: windows-latest
            shell: bash
          - os: windows-latest
            shell: zsh
          - os: windows-latest
            shell: fish
          - os: windows-latest
            shell: ksh
      
    env:
      OS: ${{ matrix.os }}
      NODEJS: ${{ matrix.node_version }}
      TEST_OS: ${{ matrix.os == 'windows-latest' && 'win32' || matrix.os == 'ubuntu-latest' && 'linux' || matrix.os == 'macos-latest' && 'darwin' }}
      TEST_SHELL: ${{ matrix.shell }}
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node_version }}
      - name: Cache NPM packages
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ matrix.node_version }}-npm-${{ hashFiles('package.json') }}
          restore-keys: ${{ runner.os }}-${{ matrix.node_version }}-npm
      - name: Install bash completions
        if: ${{ matrix.os == 'macos-latest' && matrix.shell == 'bash' }}
        run: |
          brew install bash-completion
          cat <<EOF >> ~/.bash_profile
          if [ -f $(brew --prefix)/etc/bash_completion ]; then
            . $(brew --prefix)/etc/bash_completion
          fi
          EOF
      - name: Install expect
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: sudo apt-get install -y expect
      - name: Install zsh
        if: ${{ matrix.os == 'ubuntu-latest' && matrix.shell == 'zsh' }}
        run: sudo apt-get install -y zsh
      - name: Install ksh
        if: ${{ matrix.os == 'ubuntu-latest' && matrix.shell == 'ksh' }}
        run: sudo apt-get install -y ksh
      - name: Install fish
        if: ${{ matrix.shell == 'fish'}}
        uses: fish-actions/install-fish@v1
      - name: Install and test (bash)
        if: ${{ matrix.shell == 'bash'}}
        shell: bash -e {0}
        run: |
          export SHELL=$(which bash)
          npm install
          npm run test
      - name: Install and test (zsh)
        if: ${{ matrix.shell == 'zsh'}}
        shell: zsh -i {0}
        run: |
          export SHELL=$(which zsh)
          export INTERACTIVE=true
          touch ~/.zshrc
          cat <<EOF >> ~/.zshrc
          zstyle :compinstall filename '~/.zshrc'
          autoload -Uz compinit
          compinit
          EOF
          source ~/.zshrc
          npm install
          npm run test
      - name: Install and test (fish)
        if: ${{ matrix.shell == 'fish'}}
        shell: fish {0}
        run: |
          export SHELL=$(which fish)
          mkdir -p ~/.config/fish
          touch ~/.config/fish/config.fish
          npm install
          npm run test
      - name: Install and test (ksh)
        if: ${{ matrix.shell == 'ksh'}}
        shell: ksh {0}
        run: |
          export SHELL=$(which ksh)
          touch ~/.kshrc
          npm install
          npm run test
      - name: Install and test (powershell linux/macos)
        if: ${{ matrix.shell == 'powershell' && matrix.os != 'windows-latest'}}
        shell: pwsh
        run: |
          $env:SHELL = '/usr/bin/pwsh'
          New-Item "$HOME/.config/powershell" -ItemType Directory -Force -ea 0
          New-Item "$HOME/.config/powershell/Microsoft.PowerShell_profile.ps1"
          npm install
          npm run test
      - name: Install and test (powershell windows)
        if: ${{ matrix.shell == 'powershell' && matrix.os == 'windows-latest'}}
        shell: pwsh
        run: |
          New-Item "$HOME\Documents\PowerShell" -ItemType Directory -Force -ea 0
          New-Item "$HOME\Documents\PowerShell\Microsoft.PowerShell_profile.ps1"
          npm install
          npm run test
